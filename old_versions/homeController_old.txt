<?php

namespace App\Http\Controllers;

use App\Models\Subcategories;
use App\Models\Categories;
use Illuminate\Contracts\View\View;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;


class HomeController extends Controller
{

    /**
     * Show the application dashboard.
     *
     * @param Request $request
     * @return View|JsonResponse
     */
    public function all_products(Request $request): View|JsonResponse
    {
        $filter = $request->query('filter');
        $paginate = $request->query('paginate');
        $products = DB::table('products')->select('products.*');


        if(!$paginate){
            $paginate=10;
        }else{
            $paginate = (int)$paginate;
        }
        $products->paginate($paginate);
        if(!is_null($filter)){
            if(array_key_exists('categories',$filter)) {
                $products = $products->whereIn('category_id', $filter['categories']);

                $subcategories = DB::table('subcategories');
                $subcategories = $subcategories->whereIn('category_id', $filter['categories']);
                $subcategories = $subcategories->join('categories', 'categories.id', '=',
                    'subcategories.category_id')->select('subcategories.*', 'categories.name as category_name');
                if($products && $subcategories){
                return response()->json([
                    'data_sub'=>$subcategories->get(),
                ]);
                }
            }
            else if(array_key_exists('subcategories',$filter)) {
                $products = $products->whereIn('subcategory_id', $filter['subcategories']);
            }
            else if(!is_null($filter['price_min'])) {
                $products = $products->where('price', '>=', $filter['price_min']);
            }
            else if(!is_null($filter['price_max'])) {
                $products = $products->where('price', '<=', $filter['price_max']);
            }


            return response()->json([
               'data'=>$products->get(),
            ]);
        }

        $categories = Categories::orderBy('name', 'ASC')->get();
        return view('home',[
            'products' => $products->get(),
            'categories' => $categories,
        ]);
    }

}


//home.js
var categories = [];
var subcategoriess = [];

   $('div.custom-checkbox input').on('change',function(event){
        event.preventDefault();
        if(this.checked){
            const form = $('form.sidebar-filter').serialize();

            getSubcategories(form);
        }else{
            console.log("Zamknięte!");
        }

function getSubcategories(form){
    $.ajax({
        method: "GET",
        url:"/",
        data: form
    })
    .done(function(response){
        if($('.divider_subcategories').hasClass('d-none')){
            $('.divider_subcategories').removeClass('d-none');
            $('.divider_subcategories').addClass('d-flex');
            $('.subcategories').removeClass('d-none');


        }

        $.each(response.data_sub, function(index,subcategories){
            if(subcategoriess.includes(subcategories.name)!=true){
            const subca = '<div class="subcategory mt-2 mb-2 pl-2">\n' +
                '                       <div class="custom-control custom-checkbox">\n' +
                '                        <input type="checkbox" class="custom-control-input" id="subcategory-'+subcategories.id+'" name="filter[subcategories][]" value="'+subcategories.id+'">\n' +
                '                        <label class="custom-control-label" for="subcategory-'+subcategories.id+'">'+subcategories.name+'</label>\n' +
                '                    </div>\n' +
                '                </div>';
            if(categories.includes(subcategories.category_name)!=true){
                var category =  '<h6 class="text-uppercase mt-5 mb-3 text-secondary">'+subcategories.category_name+'</h6>';
                $('.subcategories').append(category);
                categories.push(subcategories.category_name);
            }
            $('.subcategories').append(subca);
            subcategoriess.push(subcategories.name);
            }
        });
    })
    .fail(function(){
        console.log("Zamknięte");
    });
}
